<?php

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * Description of Num2reg
 *
 * @author ili4
 */
class Num2reg {

	private $codes = array('00' => 'Российская Федерация',
	    '01' => 'Республика Адыгея',
	    '02' => 'Республика Башкортостан',
	    '03' => 'Республика Бурятия',
	    '04' => 'Республика Алтай (Горный Алтай)',
	    '05' => 'Республика Дагестан',
	    '06' => 'Республика Ингушетия',
	    '07' => 'Кабардино-Балкарская Республика',
	    '08' => 'Республика Калмыкия',
	    '09' => 'Республика Карачаево-Черкесская',
	    '10' => 'Республика Карелия',
	    '11' => 'Республика Коми',
	    '12' => 'Республика Марий Эл',
	    '13' => 'Республика Мордовия',
	    '14' => 'Республика Саха (Якутия)',
	    '15' => 'Республика Северная Осетия - Алания',
	    '16' => 'Республика Татарстан',
	    '17' => 'Республика Тыва',
	    '18' => 'Удмуртская Республика',
	    '19' => 'Республика Хакасия',
	    '21' => 'Чувашская Республика',
	    '22' => 'Алтайский край',
	    '23' => 'Краснодарский край',
	    '24' => 'Красноярский край',
	    '25' => 'Приморский край',
	    '26' => 'Ставропольский край',
	    '27' => 'Хабаровский край',
	    '28' => 'Амурская область',
	    '29' => 'Архангельская область',
	    '30' => 'Астраханская область',
	    '31' => 'Белгородская область',
	    '32' => 'Брянская область',
	    '33' => 'Владимирская область',
	    '34' => 'Волгоградская область',
	    '35' => 'Вологодская область',
	    '36' => 'Воронежская область',
	    '37' => 'Ивановская область',
	    '38' => 'Иркутская область',
	    '39' => 'Калининградская область',
	    '40' => 'Калужская область',
	    '41' => 'Камчатский край',
	    '42' => 'Кемеровская область',
	    '43' => 'Кировская область',
	    '44' => 'Костромская область',
	    '45' => 'Курганская область',
	    '46' => 'Курская область',
	    '47' => 'Ленинградская область',
	    '48' => 'Липецкая область',
	    '49' => 'Магаданская область',
	    '50' => 'Московская область',
	    '51' => 'Мурманская область',
	    '52' => 'Нижегородская область',
	    '53' => 'Новгородская область',
	    '54' => 'Новосибирская область',
	    '55' => 'Омская область',
	    '56' => 'Оренбургская область',
	    '57' => 'Орловская область',
	    '58' => 'Пензенская область',
	    '59' => 'Пермский край',
	    '60' => 'Псковская область',
	    '61' => 'Ростовская область',
	    '62' => 'Рязанская область',
	    '63' => 'Самарская область',
	    '64' => 'Саратовская область',
	    '65' => 'Сахалинская область',
	    '66' => 'Свердловская область',
	    '67' => 'Смоленская область',
	    '68' => 'Тамбовская область',
	    '69' => 'Тверская область',
	    '70' => 'Томская область',
	    '71' => 'Тульская область',
	    '72' => 'Тюменская область',
	    '73' => 'Ульяновская область',
	    '74' => 'Челябинская область',
	    '75' => 'Забайкальский край',
	    '76' => 'Ярославская область',
	    '77' => 'г. Москва',
	    '78' => 'г. Санкт-Петербург',
	    '79' => 'Еврейская автономная область',
	    '82' => 'Республика Крым',
	    '83' => 'Ненецкий автономный округ',
	    '86' => 'Ханты-Мансийский автономный округ - Югра',
	    '87' => 'Чукотский автономный округ',
	    '89' => 'Ямало-Ненецкий автономный округ',
	    '92' => 'г. Севастополь',
	    '94' => 'г. Байконур',
	    '95' => 'Чеченская республика');
	private $names = array(
	    'российская федерация' => '00',
	    'российская федерация, кроме чеченской республики (чр)' => '00',
	    'уральский регион' => '00',
	    'дальневосточный регион' => '00',
	    'северо-западный регион' => '00',
	    'сибирский регион' => '00',
	    'центральный регион' => '00',
	    'адыгея' => '01',
	    'башкортостан' => '02',
	    'р-ны абзелиловский и белорецкий' => '02',
	    'бурятия' => '03',
	    'алтай (горный алтай)' => '04',
	    'горный алтай' => '04',
	    'алтай' => '04',
	    'дагестан' => '05',
	    'ингушетия' => '06',
	    'кабардино-балкарская' => '07',
	    'кабардино-балкария' => '07',
	    'кабардино - балкарская' => '07',
	    'калмыкия' => '08',
	    'карачаево-черкесская' => '09',
	    'карачаево - черкесская' => '09',
	    'карачаево-черкессия' => '09',
	    'карелия' => '10',
	    'коми' => '11',
	    'марий эл' => '12',
	    'марий-эл' => '12',
	    'мордовия' => '13',
	    'саха (якутия)' => '14',
	    'саха /якутия/' => '14',
	    'северная осетия - алания' => '15',
	    'рсо-алания' => '15',
	    'татарстан' => '16',
	    'татарстан (татарстан)' => '16',
	    'тыва' => '17',
	    'удмуртская' => '18',
	    'удмуртия' => '18',
	    'хакасия' => '19',
	    'чувашская' => '21',
	    'чувашская - чувашия' => '21',
	    'чувашия' => '21',
	    'алтайский' => '22',
	    'краснодарский' => '23',
	    'красноярский' => '24',
	    'приморский' => '25',
	    'ставропольский' => '26',
	    'хабаровский' => '27',
	    'амурская' => '28',
	    'архангельская' => '29',
	    'архангельская и ненецкий' => '29',
	    'астраханская' => '30',
	    'белгородская' => '31',
	    'брянская' => '32',
	    'владимирская' => '33',
	    'волгоградская' => '34',
	    'вологодская' => '35',
	    'воронежская' => '36',
	    'ивановская' => '37',
	    'иркутская' => '38',
	    'калининградская' => '39',
	    'калужская' => '40',
	    'камчатский' => '41',
	    'кемеровская' => '42',
	    'кировская' => '43',
	    'костромская' => '44',
	    'курганская' => '45',
	    'курская' => '46',
	    'ленинградская' => '47',
	    'липецкая' => '48',
	    'магаданская' => '49',
	    'московская' => '50',
	    'мурманская' => '51',
	    'нижегородская' => '52',
	    'новгородская' => '53',
	    'новосибирская' => '54',
	    'омская' => '55',
	    'оренбургская' => '56',
	    'орловская' => '57',
	    'пензенская' => '58',
	    'пермский' => '59',
	    'р-н чайковский' => '59',
	    'лысьвенский р-н' => '59',
	    'псковская' => '60',
	    'ростовская' => '61',
	    'рязанская' => '62',
	    'самарская' => '63',
	    'саратовская' => '64',
	    'сахалинская' => '65',
	    'свердловская' => '66',
	    'смоленская' => '67',
	    'тамбовская' => '68',
	    'тверская' => '69',
	    'томская' => '70',
	    'тульская' => '71',
	    'тюменская' => '72',
	    'ульяновская' => '73',
	    'челябинская' => '74',
	    'забайкальский' => '75',
	    'ярославская' => '76',
	    'москва' => '77',
	    'москва и московская' => '77',
	    'санкт-петербург' => '78',
	    'санкт - петербург' => '78',
	    'санкт - петербург и ленинградская' => '78',
	    'санкт-петербург и ленинградская' => '78',
	    'еврейская автономная' => '79',
	    'еврейская' => '79',
	    'крым' => '82',
	    'крым и севастополь' => '82',
	    'севастополь и крым' => '82',
	    'ненецкий' => '83',
	    'ханты-мансийский' => '86',
	    'ханты - мансийский - югра' => '86',
	    'сургутский район и сургут' => '86',
	    'чукотский' => '87',
	    'ямало-ненецкий' => '89',
	    'ямало - ненецкий' => '89',
	    'севастополь' => '92',
	    'байконур' => '94',
	    'чеченская' => '95');
	private $abc = array(
	    '877' => '01',
	    '385' => '22',
	    '388' => '04',
	    '416' => '28',
	    '818' => '29',
	    '851' => '30',
	    '472' => '31',
	    '483' => '32',
	    '301' => '03',
	    '365' => '82',
	    '492' => '33',
	    '844' => '34',
	    '817' => '35',
	    '820' => '35',
	    '473' => '36',
	    '872' => '05',
	    '426' => '79',
	    '343' => '66',
	    '493' => '37',
	    '873' => '06',
	    '395' => '38',
	    '866' => '07',
	    '401' => '39',
	    '847' => '08',
	    '484' => '40',
	    '415' => '41',
	    '878' => '09',
	    '814' => '10',
	    '384' => '42',
	    '833' => '43',
	    '821' => '11',
	    '494' => '44',
	    '861' => '23',
	    '862' => '23',
	    '391' => '24',
	    '352' => '45',
	    '471' => '46',
	    '813' => '47',
	    '474' => '48',
	    '413' => '49',
	    '836' => '12',
	    '834' => '13',
	    '495' => '77',
	    '498' => '77',
	    '499' => '77',
	    '495' => '50',
	    '496' => '50',
	    '498' => '50',
	    '815' => '51',
	    '831' => '52',
	    '816' => '53',
	    '383' => '54',
	    '381' => '55',
	    '353' => '56',
	    '486' => '57',
	    '841' => '58',
	    '342' => '59',
	    '423' => '25',
	    '811' => '60',
	    '863' => '61',
	    '491' => '62',
	    '846' => '63',
	    '848' => '63',
	    '812' => '78',
	    '845' => '64',
	    '424' => '65',
	    '867' => '15',
	    '869' => '92',
	    '481' => '67',
	    '865' => '26',
	    '879' => '26',
	    '475' => '68',
	    '843' => '16',
	    '855' => '16',
	    '482' => '69',
	    '382' => '70',
	    '487' => '71',
	    '394' => '17',
	    '345' => '72',
	    '341' => '18',
	    '842' => '73',
	    '347' => '02',
	    '421' => '27',
	    '390' => '19',
	    '346' => '86',
	    '351' => '74',
	    '871' => '95',
	    '302' => '75',
	    '835' => '21',
	    '427' => '87',
	    '411' => '14',
	    '349' => '89',
	    '485' => '76',
	);
	private $db;
	private $debug;
	private $files = array(
	    "https://www.rossvyaz.ru/docs/articles/Kody_ABC-3kh.csv",
	    "https://www.rossvyaz.ru/docs/articles/Kody_ABC-4kh.csv",
	    "https://www.rossvyaz.ru/docs/articles/Kody_ABC-8kh.csv",
	    "https://www.rossvyaz.ru/docs/articles/Kody_DEF-9kh.csv"
	);

	/**
	 * 
	 * @param String $_db Путь к файлу базы данных, по умолчанию /var/lib/rossvyaz-num2reg.db
	 * @param Boolean $_debug Выводить сообщения
	 */
	public function __construct($_db = "", $_debug = false) {
		$this->debug = $_debug;
		if (!$_db) {
			$_db = "/var/lib/rossvyaz-num2reg.db";
		}
		$this->deb("Используем базу $_db");
		$this->db = new SQLite3($_db);
	}

	private function trim_name($name) {
		$name = str_replace("АО", "", $name);
		$name = mb_strtolower($name);
		$name = str_replace("республика", "", $name);
		$name = str_replace("область", "", $name);
		$name = str_replace("край", "", $name);
		$name = str_replace("автономный округ", "", $name);
		$name = str_replace("обл.", "", $name);
		$name = str_replace("г.", "", $name);
		$name = trim($name);
		$name = str_replace("  ", " ", $name);
		$ar = explode("|", $name);
		$name = trim($ar[count($ar) - 1]);
		if (strpos($name, 'российская федерация, кроме') === 0) {
			return 'российская федерация';
		}
		return $name;
	}

	/** Обновление базы из справочников с сайта Россвязи. https://www.rossvyaz.ru/activity/num_resurs/registerNum/
	 * 
	 */
	public function updatedb() {
		$this->deb("Обновление базы...");
		/*
		  foreach ($this->codes as $code => $name) {
		  $name = $this->trim_name($name);
		  $this->names[$name] = $code;
		  }
		 */

		$this->db->exec("create table if not exists data_tmp (code INTEGER, number_min INTEGER, number_max INTEGER, number_count INTEGER, oper TEXT, reg_code TEXT, region_orig TEXT)");
		$this->db->query("begin");
		foreach ($this->files as $url) {
			$this->deb("Обработка файла $url...");
			$fp = fopen($url, "r");
			if ($fp) {
				$first = true;
				$x = 0;
				while (!feof($fp)) {
					$ar = fgetcsv($fp, 0, ';');
					if ($first) {
						$first = false;
						continue;
					}
					$code = trim($ar[0]);
					if ($code) {
						$from = trim($ar[1]);
						$to = trim($ar[2]);
						$count = trim($ar[3]);
						$oper = iconv("cp1251", "utf8", trim($ar[4]));
						$region_orig = iconv("cp1251", "utf8", trim($ar[5]));

						$region = $this->trim_name($region_orig);
						$reg_code = $this->abc[$code] ? $this->abc[$code] : $this->names[$region];
						//$this->deb("code=$code from=$from to=$to count=$count oper=$oper region=$region reg_code=$reg_code");
						$ret = $this->db->exec("insert into data_tmp (code, number_min, number_max, number_count, oper, reg_code, region_orig) values ($code, " . $code . $from . ", " . $code . $to . ", $count, '" . str_replace("'", '"', $oper) . "', '$reg_code', '" . str_replace("'", '"', $region_orig) . "')");
						if (!$ret) {
							exit("ERR");
						}
						if (!$reg_code) {
							//echo "NO REG CODE for ($region)(" . iconv("cp1251", "utf8", trim($ar[5])) . ") !!!!!!!!!\n";
							//var_dump($ar);
							//break;
						}
					}
				}
			} else {
				$this->deb("Ошибка поучения $url");
				return false;
			}
		}
		$this->db->query("end");
		$this->db->query("drop table if exists data");
		$this->db->query("ALTER TABLE data_tmp rename to data");
		return true;
	}

	/**
	 * 
	 * @param string $number номер телефона, 11 цифр, начиная с 7 или 8
	 * @return array массив из элементов: 
	 * <ul>
	 * <li><b>code</b> - код ABC/DEF или код ошибки
	 * <li><b>err</b> - текстовое описание ошибки (отсутствует, если нет ошибок)
	 * <li><b>reg_code</b> - код субъекта РФ, '00' если однозначно не определен, например, для кодов 800
	 * <li><b>region</b> - название субъекта РФ
	 * <li><b>region_orig</b> - оригинальное название региона, из данных Россвязи, например "г. Орел|Орловская обл."
	 * <li><b>oper</b> - оператор связи
	 * <li><b>number_count</b> - колмчество номеров, выделенных оператору в этом диапазоне 
	 * <li><b>number_min</b> - первый номер диапазона
	 * <li><b>number_max</b> - последний номер диапазона
	 * </ul>
	 */
	public function search($number) {
		//$this->deb("Поиск номера $number");
		$number = preg_replace("/^\+/", '', $number);
		if (!preg_match("/^(7|8)([0-9]{10})$/", $number, $regs)) {
			return array("code" => -1, "err" => "Неверный формат номера");
		}
		$number = $regs[2];
		$list = $this->db->query("select * from sqlite_master where type = 'table'");
		if (!$list->fetchArray(SQLITE3_ASSOC)) {
			return array("code" => -2, "err" => "Пустая база данных. Запустите updatedb!");
		}

		$list = $this->db->query("select * from data where $number between number_min and number_max");
		$data = $list->fetchArray(SQLITE3_ASSOC);
		if (!$data) {
			return array("code" => -3, "err" => "Ничего не найдено");
		}
		$data["region"] = $this->codes[$data["reg_code"]];
		return $data;
	}

	private function deb($s) {
		if ($this->debug) {
			echo $s . "\n";
		}
	}

}
